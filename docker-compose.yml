services:
  envoy:
    image: envoyproxy/envoy:v1.24-latest
    ports:
      - "9901:9901"
      - "8081:8081"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - my_network
    depends_on:
      thresh:
        condition: service_started
      bulbasaur:
        condition: service_started
      # akali:
      #   condition: service_started
      # questionai:
      #   condition: service_started

  bulbasaur:
    image: skillsharp123/bulbasaur:v1.0.23
    env_file:
      - ./configs/Bulbasaur/.env
    networks:
      - my_network
    depends_on:
      database:
        condition: service_healthy

  thresh:
    image: skillsharp123/skillsharp_thresh:v1.0.8
    env_file:
      - ./configs/Thresh/.env
    networks:
      - my_network
    depends_on:
      database:
        condition: service_healthy

  database:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: skillsharp@fit!2021
    networks:
      - my_network
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - my_network
    
  # caitlyn:
  #   image: skillsharp123/skillsharp-fe:v1.0.11
  #   ports:
  #     - "3000:5173"
  #   env_file:
  #     - ./configs/Caitlyn/.env
  #   networks:
  #     - my_network

  # akali:
  #   build:
  #     context: ./raw_services/Akali
  #     dockerfile: dockerfile
  #   env_file:
  #     - ./configs/Akali/.env
  #   networks:
  #     - my_network
  #   depends_on:
  #     database:
  #       condition: service_started

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "${ELASTIC_PORT:-9200}:9200"
  #     - "9300:9300"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   networks:
  #     - my_network

  # questionai:
  #   build:
  #     context: ./raw_services/QuestionGenerator
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./configs/QuestionGenerator/.env
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - my_network

    
networks:
  my_network:

volumes:
  elasticsearch_data:
  redis_data: